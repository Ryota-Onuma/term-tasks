// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: tags.sql

package queries

import (
	"context"
)

const getTag = `-- name: GetTag :one
SELECT id, name, created_at, updated_at FROM tags
WHERE tags.id = ? LIMIT 1
`

func (q *Queries) GetTag(ctx context.Context, id int64) (Tag, error) {
	row := q.db.QueryRowContext(ctx, getTag, id)
	var i Tag
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const listTags = `-- name: ListTags :many
SELECT id, name, created_at, updated_at FROM tags
WHERE tags.id = ? LIMIT 1
`

func (q *Queries) ListTags(ctx context.Context, id int64) ([]Tag, error) {
	rows, err := q.db.QueryContext(ctx, listTags, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Tag
	for rows.Next() {
		var i Tag
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
